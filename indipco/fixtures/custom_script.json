[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Loan",
  "modified": "2020-03-25 21:27:09.978206",
  "name": "Loan-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Loan', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tcur_frm.set_query(\"ind_ssa\", function(doc) {\n\t\t    return {\n\t\t        filters: {\n\t\t            \"employee\": cur_frm.doc.applicant\n\t\t        }\n\t\t    };\n\t\t}\n\t\t);\n\t\t\n\t},\n\tapplicant(frm){\n\t\t    //this will fetch and set the most recent assignment.\n        frappe.db.get_link_options('Salary Structure Assignment', '',\n            {\n\t\t\t\temployee: cur_frm.doc.applicant\n\t\t\t}\n\t\t).then(all_ssa =>{\n\t\t    frm.set_value(\"ind_ssa\", all_ssa[0].value);\n\t\t});\n\t},\n    validate(frm) {\n\n        if (!frm.doc.ind_employee_from_ssa)\n\n        {\n            msgprint('Please create SSA for selected Employee');\n            validated = false;\n        }\n        \n        if(frm.doc.ind_employee_from_ssa && frm.doc.applicant!=frm.doc.ind_employee_from_ssa) \n\n        {\n            msgprint('Please refresh and select the employee');\n            validated = false;\n        }         \n        \n//        frm.doc.ind_maximum_monthly_deduction_allowed = frm.doc.ind_base_salary*0.40;\n        \n        if(frm.doc.monthly_repayment_amount > frm.doc.ind_maximum_monthly_deduction_allowed) \n        {\n            msgprint(\"Monthly deduction exceeded\");\n            validated = false;\n        }\n    },\n\n});\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Salary Structure Assignment",
  "modified": "2020-03-13 22:14:24.795815",
  "name": "Salary Structure Assignment-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Salary Structure Assignment',  {\n    refresh: function(frm) {\n\t\t// your code here\n\t\tfrm.doc.ind_maximum_monthly_deduction=frm.doc.base*0.40;\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Item",
  "modified": "2019-10-08 15:50:20.876149",
  "name": "Item-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item', {\n\tvalidate(frm) {\n\t\t// your code here\n\t\tif (frm.doc.item_group==\"All Item Groups\") {\n\t\t    msgprint(\"Item Group All Item Groups not allowed\");\n\t\t    validated=false;\n\t\t}\n    }\n}\n)"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Material Request",
  "modified": "2020-11-08 22:47:50.539037",
  "name": "Material Request-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Material Request', {\n\trefresh(frm) {\n\t    cur_frm.fields_dict['ind_department1'].get_query = function(doc) {\n\t        return {\n\t            filters: {\n\t                \"is_group\": '0',\n\t                \"disabled\":\"0\"\n\t            }\n\t        }\n\t    }\n    }\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Additional Salary",
  "modified": "2020-01-09 21:39:43.701003",
  "name": "Additional Salary-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Additional Salary', {\n\tsetup(frm) {\n\t\t// your code here\n\t\tcur_frm.set_query(\"ind_salary_structure_assignment\", function(doc) {\n\t\t    return {\n\t\t        filters: {\n\t\t            \"employee\": cur_frm.doc.employee\n\t\t        }\n\t\t    };\n\t\t}\n\t\t);\n\t\t\n\t},\n\temployee(frm){\n\t\t    //this will fetch and set the most recent assignment.\n        frappe.db.get_link_options('Salary Structure Assignment', '',\n            {\n\t\t\t\temployee: cur_frm.doc.employee\n\t\t\t}\n\t\t).then(all_ssa =>{\n\t\t    frm.set_value(\"ind_salary_structure_assignment\", all_ssa[0].value);\n\t\t});\n\t}\t\n\t\n});\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Stock Entry",
  "modified": "2020-06-02 22:14:25.573377",
  "name": "Stock Entry-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Stock Entry', {\n\tvalidate(frm) {\n\t\t// your code here\n\t\tfrm.doc.ind_furnace_total_capacity=10000*frm.doc.ind_running_furnaces;\n\t\tif (frm.doc.ind_item_group_for_melting_process==\"Molten Metal\" && frm.doc.from_bom && frm.doc.fg_completed_qty>frm.doc.ind_furnace_total_capacity)\n\t\t{\n\t\t    msgprint(\"For Quantity should be less than Furnace Total Capacity\");\n\t\t    validated = false;\n\t\t}\n\t\t\n\t\t\n\t}\n});\n\nfrappe.ui.form.on('Stock Entry Detail', {\n\tvalidate(frm) {\n\t\tif (frm.doc.item_group==\"Molten Metal\"){\n\t\t    frm.doc.ind_workstation=\"Melting Furnace\";\n\t\t}\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Work Order",
  "modified": "2020-06-02 23:53:12.584450",
  "name": "Work Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Work Order', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tif(frm.doc.ind_routing==\"Melting\"){\n\t\t    frm.doc.fg_warehouse=\"Magnesium Treatment - INDIPCO\";\n\t\t    frm.doc.wip_warehouse=\"Melting - INDIPCO\";\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Payroll Entry",
  "modified": "2020-12-07 12:40:32.170869",
  "name": "Payroll Entry-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Payroll Entry', {\n\trefresh(frm) {\n\t\t// your code here\n\t    cur_frm.fields_dict['department'].get_query = function(doc) {\n\t        return {\n\t            filters: {\n\t                \"is_group\": '0',\n\t                \"disabled\":\"0\"\n\t            }\n\t        };\n\t    };\n\n\t}\n});\n"
 }
]